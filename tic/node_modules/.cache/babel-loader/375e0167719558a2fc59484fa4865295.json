{"ast":null,"code":"import _slicedToArray from \"/Users/xiaoming/react/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/xiaoming/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xiaoming/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xiaoming/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xiaoming/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xiaoming/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xiaoming/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this = this;\n\n      return React.createElement(Square, {\n        value: this.props.squares[i],\n        onClick: function onClick() {\n          return _this.props.onClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this2.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var history = this.state.history;\n      var current = history[history.length - 1];\n      var winner = calculateWinner(current.squares);\n      var status;\n\n      if (winner) {\n        status = 'winner: ' + winner;\n      } else {\n        status = 'Next player:' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Board, {\n        squares: current.squares,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, status), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/xiaoming/react/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","i","squares","state","slice","calculateWinner","xIsNext","setState","renderSquare","Component","Game","history","Array","fill","current","length","winner","status","handleClick","render","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n  function Square(props){\n          return(\n            <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n            </button>\n          )\n  }\n  class Board extends React.Component {\n    renderSquare(i) {\n      return <Square \n                value={this.props.squares[i]}\n                onClick={()=>this.props.onClick(i)}\n                />;\n    }\n    handleClick(i){\n        const squares=this.state.squares.slice();\n        if(calculateWinner(squares)||squares[i]){\n            return;\n        }\n        squares[i]=this.state.xIsNext?'X':'O';\n        this.setState({\n            squares:squares,\n            xIsNext:!this.state.xIsNext\n        });\n    }\n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n      constructor(props){\n          super(props);\n          this.state={\n              history:[{squares:Array(9).fill(null)}],\n              xIsNext:true\n          }\n      }\n    render() {\n        const history=this.state.history;\n        const current=history[history.length-1];\n        const winner=calculateWinner(current.squares);\n        let status;\n        if(winner){\n            status='winner: '+winner;\n        }else{\n            status = 'Next player:'+(this.state.xIsNext?'X':'O');\n        }\n  \n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n            squares={current.squares}\n            onClick={(i)=>this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  "]},"metadata":{},"sourceType":"module"}